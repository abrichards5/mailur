name: check code
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Timestamp
        id: timestamp
        run: |
          echo "::set-output name=value::$(/bin/date -u '+%Y%m%dT%T')"
        shell: bash
      # For clean mlr image, only store cache from this step, don't use it
      - uses: actions/cache@v2
        with:
          path: podman
          key: ${{ runner.os }}-podman-${{ steps.timestamp.outputs.value }}

      - name: Install
        run: |
          bin/install-on-ubuntu
          mkdir -p podman
          sudo podman export mlr > podman/mlr.tar

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: timestamp
        id: timestamp
        run: |
          echo "::set-output name=value::$(/bin/date -u '+%Y%m%dT%T')"
        shell: bash
      - uses: actions/cache@v2
        with:
          path: podman
          key: ${{ runner.os }}-podman-${{ steps.timestamp.outputs.value }}
          restore-keys: |
            ${{ runner.os }}-podman-

      - name: prepare mlr image
        run: |
          if [ ! -f podman/mlr.tar ]; then
            bin/install-on-ubuntu
            mkdir -p podman
            sudo podman export mlr > podman/mlr.tar
            sudo podman commit mlr mlr
          else
            sudo podman import podman/mlr.tar localhost/mlr
          fi

      - name: prepare mlr container
        run: |
          sudo podman run -v .:/opt/mailur --name mlr -d mlr /sbin/init

          cat << EOF | sudo podman exec -i -w /opt/mailur mlr /bin/bash
          set -exuo pipefail

          python3 -m venv env

          . bin/activate
          bin/install-test
          npm i
          EOF

      - name: lint
        run: |
          cat << EOF | sudo podman exec -i -w /opt/mailur mlr /bin/bash
          set -exuo pipefail

          . bin/activate
          bin/manage.py lint --ci
          EOF

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: timestamp
        id: timestamp
        run: |
          echo "::set-output name=value::$(/bin/date -u '+%Y%m%dT%T')"
        shell: bash
      - uses: actions/cache@v2
        with:
          path: podman
          key: ${{ runner.os }}-podman-${{ steps.timestamp.outputs.value }}
          restore-keys: |
            ${{ runner.os }}-podman-

      - name: prepare mlr image
        run: |
          if [ ! -f podman/mlr.tar ]; then
            bin/install-on-ubuntu
            mkdir -p podman
            sudo podman export mlr > podman/mlr.tar
            sudo podman commit mlr mlr
          else
            sudo podman import podman/mlr.tar localhost/mlr
          fi

      - name: prepare mlr container
        run: |
          sudo podman run -v .:/opt/mailur --name mlr -d mlr /sbin/init

          cat << EOF | sudo podman exec -i -w /opt/mailur mlr /bin/bash
          set -exuo pipefail

          bin/install
          bin/install-test
          EOF

      - name: test
        run: |
          cat << EOF | sudo podman exec -i -w /opt/mailur mlr /bin/bash
          set -exuo pipefail

          . bin/activate
          bin/manage.py test
          EOF
